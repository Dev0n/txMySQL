Rudimentary Twisted MySQL Protocol implementation. Consider this v0.1 alpha.

With thanks to _habnabit for the intial code (which did the vast majority of
the heavy lifting) and his qbuf library.

PREREQUISITES:

    * qbuf (a Python C-extension)

TODO:

    * Support escaping arguments with '?' or '%s' style syntax (my preference
      being for the former)
    * Make it subclass ReconnectingClientFactory and handle reconnection
      correctly

    * Unit tests
    * DateTime support (see pymysql.converters for how to do this)
    * Iterator protocol for iterating over large results sets, lazily
      loaded as they come back from the server
    * DBAPI support - see http://www.python.org/dev/peps/pep-0249/
    * Actually use the database=foo argument passed into the constructor
      (need to set CLIENT_* flag)
    * Code comments, and a lot of tidying up
    * Test against more than just the version of MySQL 5.1 which happened
      to be installed on my ThinkPad :-)

EXAMPLE USAGE:

Create an empty database called "foo" and set username and password in example.py.

twistd -noy example.py

Expected output:

[]
[[1, 'Hello world', 0], [2, 'Hello world', 1], [3, 'Hello world', 2], [4,
'Hello world', 3], [5, 'Hello world', 4], [6, 'Hello world', 5], [7, 'Hello
world', 6], [8, 'Hello world', 7], [9, 'Hello world', 8], [10, 'Hello world',
9]]

QUESTIONS?

Email luke [at] hybrid-logic [dot] co [dot] uk


