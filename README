Twisted MySQL Protocol implementation. Consider this v0.2

With thanks to _habnabit for the intial code (which did the vast majority of
the heavy lifting) and his qbuf library.

PREREQUISITES:

    * qbuf (a Python C-extension)

NEW FEATURES:
    * Connects lazily to MySQL and disconnects if the connection is left
      idle longer than idle_timeout
    * Reconnects on errors when there are pending queries (including
      user-configurable errors with temporary_error_strings=[...] in the
      constructor)
    * Now has unit tests

TODO:

    * Support escaping arguments with '?' or '%s' style syntax (my preference
      being for the former)
    * DateTime support (see pymysql.converters for how to do this)
    * Iterator protocol for iterating over large results sets, lazily
      loaded as they come back from the server
    * DBAPI support - see http://www.python.org/dev/peps/pep-0249/
    * Actually use the database=foo argument passed into the constructor
      (need to set CLIENT_* flag)
    * Code comments, and a lot of tidying up
    * Test against more than just the version of MySQL 5.1 which happened
      to be installed on my ThinkPad :-)

EXAMPLE USAGE:

from twisted.internet import defer
from txmysql import client

@defer.inlineCallbacks
def main():
    c = yield client.MySQLConnection('127.0.0.1', 'root', secrets.MYSQL_ROOT_PASS,
            idle_timeout=120, connect_timeout=30)
    yield c.selectDb("foo") # This gets remembered and re-run if the connection needs reconnection
    yield c.runOperation("insert into bar set baz='bash'")
    data = yield c.runQuery("select * from bar")


SHAMELESS PLUG: 

txMySQL will be used in production by Hybrid Web Cluster, which is an
n-redundant web cluster with no single point of failure, which uses ZFS
replication to eliminate shared storage in loosely coupled, geographically
distributed web hosting environments. Entire data centres can fail and
everything carries on running, with data loss and downtime measured in
seconds, not hours or days, and stress caused by hardware or network
connectivity failures a thing of the past.

It runs on dedicated hardware and/or cloud infrastructure, enabling hybrid
setups where you use dedicated hardware for performance and cloud
infrastructure for ease-of-provisioning, all within the same cluster.

Check it out at http://www.hybrid-cluster.com/.  If you are involved with
hosting websites or know anyone who is, please spread the word :-)

If you just want web hosting for your own site, we offer rock solid hosting
based on the aforementioned technology at http://www.hybrid-sites.com/.

QUESTIONS?

Email luke [at] hybrid-logic [dot] co [dot] uk

